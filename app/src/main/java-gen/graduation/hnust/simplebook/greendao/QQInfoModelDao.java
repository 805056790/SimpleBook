package graduation.hnust.simplebook.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import graduation.hnust.simplebook.model.QQInfoModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "QQINFO_MODEL".
*/
public class QQInfoModelDao extends AbstractDao<QQInfoModel, Long> {

    public static final String TABLENAME = "QQINFO_MODEL";

    /**
     * Properties of entity QQInfoModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property UserId = new Property(1, Long.class, "userId", false, "USER_ID");
        public final static Property Ret = new Property(2, String.class, "ret", false, "RET");
        public final static Property Msg = new Property(3, String.class, "msg", false, "MSG");
        public final static Property IsLost = new Property(4, String.class, "isLost", false, "IS_LOST");
        public final static Property Nickname = new Property(5, String.class, "nickname", false, "NICKNAME");
        public final static Property Gender = new Property(6, String.class, "gender", false, "GENDER");
        public final static Property Province = new Property(7, String.class, "province", false, "PROVINCE");
        public final static Property City = new Property(8, String.class, "city", false, "CITY");
        public final static Property Year = new Property(9, String.class, "year", false, "YEAR");
        public final static Property FigureUrl = new Property(10, String.class, "figureUrl", false, "FIGURE_URL");
        public final static Property FigureUrl1 = new Property(11, String.class, "figureUrl1", false, "FIGURE_URL1");
        public final static Property FigureUrl2 = new Property(12, String.class, "figureUrl2", false, "FIGURE_URL2");
        public final static Property FigureUrlQq1 = new Property(13, String.class, "figureUrlQq1", false, "FIGURE_URL_QQ1");
        public final static Property FigureUrlQq2 = new Property(14, String.class, "figureUrlQq2", false, "FIGURE_URL_QQ2");
        public final static Property IsYellowVip = new Property(15, String.class, "isYellowVip", false, "IS_YELLOW_VIP");
        public final static Property Vip = new Property(16, String.class, "vip", false, "VIP");
        public final static Property YellowVipLevel = new Property(17, String.class, "yellowVipLevel", false, "YELLOW_VIP_LEVEL");
        public final static Property Level = new Property(18, String.class, "level", false, "LEVEL");
        public final static Property IsYellowYearVip = new Property(19, String.class, "isYellowYearVip", false, "IS_YELLOW_YEAR_VIP");
        public final static Property CreatedAt = new Property(20, java.util.Date.class, "createdAt", false, "CREATED_AT");
        public final static Property UpdatedAt = new Property(21, java.util.Date.class, "updatedAt", false, "UPDATED_AT");
    };


    public QQInfoModelDao(DaoConfig config) {
        super(config);
    }
    
    public QQInfoModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"QQINFO_MODEL\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"USER_ID\" INTEGER," + // 1: userId
                "\"RET\" TEXT," + // 2: ret
                "\"MSG\" TEXT," + // 3: msg
                "\"IS_LOST\" TEXT," + // 4: isLost
                "\"NICKNAME\" TEXT," + // 5: nickname
                "\"GENDER\" TEXT," + // 6: gender
                "\"PROVINCE\" TEXT," + // 7: province
                "\"CITY\" TEXT," + // 8: city
                "\"YEAR\" TEXT," + // 9: year
                "\"FIGURE_URL\" TEXT," + // 10: figureUrl
                "\"FIGURE_URL1\" TEXT," + // 11: figureUrl1
                "\"FIGURE_URL2\" TEXT," + // 12: figureUrl2
                "\"FIGURE_URL_QQ1\" TEXT," + // 13: figureUrlQq1
                "\"FIGURE_URL_QQ2\" TEXT," + // 14: figureUrlQq2
                "\"IS_YELLOW_VIP\" TEXT," + // 15: isYellowVip
                "\"VIP\" TEXT," + // 16: vip
                "\"YELLOW_VIP_LEVEL\" TEXT," + // 17: yellowVipLevel
                "\"LEVEL\" TEXT," + // 18: level
                "\"IS_YELLOW_YEAR_VIP\" TEXT," + // 19: isYellowYearVip
                "\"CREATED_AT\" INTEGER," + // 20: createdAt
                "\"UPDATED_AT\" INTEGER);"); // 21: updatedAt
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"QQINFO_MODEL\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, QQInfoModel entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Long userId = entity.getUserId();
        if (userId != null) {
            stmt.bindLong(2, userId);
        }
 
        String ret = entity.getRet();
        if (ret != null) {
            stmt.bindString(3, ret);
        }
 
        String msg = entity.getMsg();
        if (msg != null) {
            stmt.bindString(4, msg);
        }
 
        String isLost = entity.getIsLost();
        if (isLost != null) {
            stmt.bindString(5, isLost);
        }
 
        String nickname = entity.getNickname();
        if (nickname != null) {
            stmt.bindString(6, nickname);
        }
 
        String gender = entity.getGender();
        if (gender != null) {
            stmt.bindString(7, gender);
        }
 
        String province = entity.getProvince();
        if (province != null) {
            stmt.bindString(8, province);
        }
 
        String city = entity.getCity();
        if (city != null) {
            stmt.bindString(9, city);
        }
 
        String year = entity.getYear();
        if (year != null) {
            stmt.bindString(10, year);
        }
 
        String figureUrl = entity.getFigureUrl();
        if (figureUrl != null) {
            stmt.bindString(11, figureUrl);
        }
 
        String figureUrl1 = entity.getFigureUrl1();
        if (figureUrl1 != null) {
            stmt.bindString(12, figureUrl1);
        }
 
        String figureUrl2 = entity.getFigureUrl2();
        if (figureUrl2 != null) {
            stmt.bindString(13, figureUrl2);
        }
 
        String figureUrlQq1 = entity.getFigureUrlQq1();
        if (figureUrlQq1 != null) {
            stmt.bindString(14, figureUrlQq1);
        }
 
        String figureUrlQq2 = entity.getFigureUrlQq2();
        if (figureUrlQq2 != null) {
            stmt.bindString(15, figureUrlQq2);
        }
 
        String isYellowVip = entity.getIsYellowVip();
        if (isYellowVip != null) {
            stmt.bindString(16, isYellowVip);
        }
 
        String vip = entity.getVip();
        if (vip != null) {
            stmt.bindString(17, vip);
        }
 
        String yellowVipLevel = entity.getYellowVipLevel();
        if (yellowVipLevel != null) {
            stmt.bindString(18, yellowVipLevel);
        }
 
        String level = entity.getLevel();
        if (level != null) {
            stmt.bindString(19, level);
        }
 
        String isYellowYearVip = entity.getIsYellowYearVip();
        if (isYellowYearVip != null) {
            stmt.bindString(20, isYellowYearVip);
        }
 
        java.util.Date createdAt = entity.getCreatedAt();
        if (createdAt != null) {
            stmt.bindLong(21, createdAt.getTime());
        }
 
        java.util.Date updatedAt = entity.getUpdatedAt();
        if (updatedAt != null) {
            stmt.bindLong(22, updatedAt.getTime());
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public QQInfoModel readEntity(Cursor cursor, int offset) {
        QQInfoModel entity = new QQInfoModel( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // userId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // ret
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // msg
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // isLost
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // nickname
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // gender
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // province
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // city
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // year
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // figureUrl
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // figureUrl1
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // figureUrl2
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // figureUrlQq1
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // figureUrlQq2
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // isYellowVip
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // vip
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // yellowVipLevel
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // level
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // isYellowYearVip
            cursor.isNull(offset + 20) ? null : new java.util.Date(cursor.getLong(offset + 20)), // createdAt
            cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)) // updatedAt
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, QQInfoModel entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setUserId(cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1));
        entity.setRet(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMsg(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setIsLost(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setNickname(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setGender(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setProvince(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setCity(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setYear(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setFigureUrl(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFigureUrl1(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setFigureUrl2(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFigureUrlQq1(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setFigureUrlQq2(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setIsYellowVip(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setVip(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setYellowVipLevel(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setLevel(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setIsYellowYearVip(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setCreatedAt(cursor.isNull(offset + 20) ? null : new java.util.Date(cursor.getLong(offset + 20)));
        entity.setUpdatedAt(cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(QQInfoModel entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(QQInfoModel entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
